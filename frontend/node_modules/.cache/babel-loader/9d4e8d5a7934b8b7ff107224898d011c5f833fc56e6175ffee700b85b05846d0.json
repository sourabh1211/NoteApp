{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sourabh verma\\\\Desktop\\\\Notes-App\\\\frontend\\\\src\\\\pages\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../components/Navbar';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [userDetails, setUserDetails] = useState(null);\n  const [profilePic, setProfilePic] = useState(localStorage.getItem(\"profilePic\") || \"\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetch(\"http://localhost:8000/getUserDetails\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId: localStorage.getItem(\"userID\")\n      })\n    }).then(res => res.json()).then(data => {\n      setUserDetails(data);\n    });\n  }, []);\n  const handlePicChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      const formData = new FormData();\n      formData.append('profilePic', file);\n      formData.append('userId', localStorage.getItem(\"userID\"));\n      fetch(\"http://localhost:8000/updateProfilePic\", {\n        method: \"POST\",\n        body: formData\n      }).then(res => res.json()).then(data => {\n        if (data.success) {\n          setProfilePic(data.profilePic); // Update the profile picture in the state\n          localStorage.setItem(\"profilePic\", data.profilePic); // Save to localStorage\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileCircle w-[150px] h-[150px] rounded-[50%] bg-[#d9d9d9] relative\",\n        children: [profilePic ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: profilePic,\n          alt: \"Profile\",\n          className: \"w-full h-full rounded-[50%]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: \"Default Avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handlePicChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Profile, \"PdA//d8bR/T57w/t79MaHn1bt7c=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","userDetails","setUserDetails","profilePic","setProfilePic","localStorage","getItem","navigate","fetch","method","headers","body","JSON","stringify","userId","then","res","json","data","handlePicChange","e","file","target","files","formData","FormData","append","success","setItem","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/sourabh verma/Desktop/Notes-App/frontend/src/pages/Profile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Profile = () => {\r\n  const [userDetails, setUserDetails] = useState(null);\r\n  const [profilePic, setProfilePic] = useState(localStorage.getItem(\"profilePic\") || \"\");\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8000/getUserDetails\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({ userId: localStorage.getItem(\"userID\") })\r\n    }).then(res => res.json()).then(data => {\r\n      setUserDetails(data);\r\n    });\r\n  }, []);\r\n\r\n  const handlePicChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      const formData = new FormData();\r\n      formData.append('profilePic', file);\r\n      formData.append('userId', localStorage.getItem(\"userID\"));\r\n\r\n      fetch(\"http://localhost:8000/updateProfilePic\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      }).then(res => res.json()).then(data => {\r\n        if (data.success) {\r\n          setProfilePic(data.profilePic); // Update the profile picture in the state\r\n          localStorage.setItem(\"profilePic\", data.profilePic); // Save to localStorage\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div>\r\n        <div className=\"profileCircle w-[150px] h-[150px] rounded-[50%] bg-[#d9d9d9] relative\">\r\n          {profilePic ? (\r\n            <img src={profilePic} alt=\"Profile\" className=\"w-full h-full rounded-[50%]\" />\r\n          ) : (\r\n            <div className=\"text-center\">Default Avatar</div>\r\n          )}\r\n          <input type=\"file\" onChange={handlePicChange} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}